{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","justifyContent","alignItems","cardMedia","cardContent","flexGrow","footer","Boolean","window","location","hostname","match","ReactDOM","render","classes","CssBaseline","AppBar","position","Toolbar","Container","maxWidth","align","Typography","variant","color","noWrap","className","src","alt","component","gutterBottom","paragraph","Grid","container","justify","item","Button","map","project","index","key","xs","sm","md","Card","CardMedia","img","CardContent","projectTitle","techUsed","CardActions","size","href","projectLink","target","sourceCode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48b433cf.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport './App.css';\n\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center', \n    alignItems: 'center'   \n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n    height: '0'\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\n\n\n\nexport default function Album() {\n    const classes = useStyles();\n\n    const projects = [\n        {\n          \"img\": \"/react-scoreboard-thumbnail.png\",\n          \"projectTitle\": \"React Scoreboard\",\n          \"techUsed\": \"React.js / JavaScript\",\n          \"projectLink\": \"https://chrisj79.github.io/react-scoreboard\",\n          \"sourceCode\": \"https://github.com/ChrisJ79/react-scoreboard\",\n          \"key\": \"1\"\n        },\n        {\n          \"img\": \"/react-noteboard-thumbnail.png\",\n          \"projectTitle\": \"React Noteboard\",\n          \"techUsed\": \"React.js / JavaScript\",\n          \"projectLink\": \"http://ChrisJ79.github.io/noteboard\",\n          \"sourceCode\": \"https://github.com/ChrisJ79/noteboard\",\n          \"key\": \"2\"\n        },\n        {\n          \"img\": \"/shopping-list-thumbnail.png\",\n          \"projectTitle\": \"Shopping List\",\n          \"techUsed\": \"jQuery / JavaScript / Bootstrap / CSS \",\n          \"projectLink\": \"http://chrisj79.github.io/shopping-list/main.html\",\n          \"sourceCode\": \"https://github.com/ChrisJ79/shopping-list\",\n          \"key\": \"3\"\n        },\n        {\n          \"img\": \"/giphy-api-thumbnail__1150x646.png\",\n          \"projectTitle\": \"Giphy API\",\n          \"techUsed\": \"jQuery / JavaScript / UI Kit / CSS\",\n          \"projectLink\": \"http://chrisj79.github.io/API-HACK/main.html\",\n          \"sourceCode\": \"https://github.com/ChrisJ79/API-HACK\",\n          \"key\": \"4\"\n        },\n        {\n          \"img\": \"/zurich-quiz-app-thumbnail.png\",\n          \"projectTitle\": \"Quiz App\",\n          \"techUsed\": \"jQuery / JavaScript / CSS / HTML\",\n          \"projectLink\": \"http://chrisj79.github.io/quiz-app/final.html\",\n          \"sourceCode\": \"https://github.com/ChrisJ79/quiz-app\",\n          \"key\": \"5\"          \n        },\n        {\n          \"img\": \"/coming-soon.png\",\n          \"projectTitle\": \"RSVP App\",\n          \"techUsed\": \"React.js / JavaScript\",\n          \"projectLink\": \"\",\n          \"sourceCode\": \"\",\n          \"key\": \"6\"          \n        }        \n    ];\n    return (\n\n  <div>\n        {/* AppBar */}\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n        <Container maxWidth=\"sm\" align=\"center\">\n\n          <Typography variant=\"h6\" color=\"inherit\" noWrap className=\"toolIconContainer\">\n            Made with <br /><img src=\"/react_no_bg__56x50.png\" className=\"toolIcon\"  alt=\"\"/> React.js & <br /><img src=\"/material-ui__62x50.png\" className=\"toolIcon\" alt=\"\"/> Material UI\n          </Typography> \n\n          {/* <Typography variant=\"h6\" color=\"inherit\" noWrap className=\"toolIconContainer\">\n            Made with <br />\n          </Typography>\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className=\"toolIconContainer\">\n            <img src=\"/react_no_bg__56x50.png\" className=\"toolIcon\"  alt=\"\"/> React.js & <br />\n          </Typography>\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className=\"toolIconContainer\">\n            <img src=\"/material-ui__62x50.png\" className=\"toolIcon\" alt=\"\"/> Material UI\n          </Typography> */}\n\n\n\n        </Container>  \n        </Toolbar>\n      </AppBar>\n      <main>\n      {/* End Appbar */}\n\n\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Chris Johnson\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Front End Web Developer<br />\n              React Enthusiast\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\">\n                    Resume\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\">\n                    Github\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        {/* End hero unit */}\n\n\n \n        {/* Project unit */}\n        <Container className={classes.cardGrid} maxWidth=\"lg\">\n          <Grid container spacing={4}>\n        {projects.map((project, index) => {\n          return (\n              <Grid item key={project.key} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia>\n                    <img className=\"imgHeight\" src={project.img} alt=\"\"/>\n                  </CardMedia>\n                  <CardContent align=\"center\">\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">{project.projectTitle}</Typography>\n                    <p>{project.techUsed}</p>\n                  </CardContent> \n                  <CardActions align=\"center\">\n                    <Button size=\"small\" color=\"primary\" href={project.projectLink} target=\"_blank\">\n                      View Project\n                    </Button>\n                    <Button size=\"small\" color=\"primary\" href={project.sourceCode} target=\"_blank\">\n                      Source Code\n                    </Button>\n                  </CardActions>                  \n                </Card>\n              </Grid>\n            );\n         })}               \n            </Grid>\n          </Container>     \n        {/* End Project Unit */}      \n\n\n        {/* WP Sites Link Unit */} \n          <Container className={classes.cardGrid} maxWidth=\"sm\" align=\"center\">\n          <img src=\"/wordpress_logo__240w.png\" alt=\"\" />\n          <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Click below to see some WordPress sites that I've built over the years.\n          </Typography>\n            <Button variant=\"contained\" size=\"large\" color=\"primary\" href=\"http://cjportfolio.flywheelsites.com/\" target=\"_blank\">\n              View\n            </Button>\n          </Container>\n\n\n        {/* End WP Sites Link Unit */}      \n\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          <img src=\"/github-icon__50x50.png\" alt=\"\" />\n        </Typography>\n      </footer>\n      {/* End footer */}\n\n  </div>    \n    )\n}\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}